name: Build and Release Arnis

on:
  release:
    types: [created]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: arnis.exe
            artifact_name: arnis-windows-x86_64.exe
          - os: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
            binary_name: arnis
            artifact_name: arnis-linux-x86_64
          - os: ubuntu-24.04
            target: aarch64-unknown-linux-gnu
            binary_name: arnis
            artifact_name: arnis-linux-aarch64
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: arnis
            artifact_name: arnis-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: arnis
            artifact_name: arnis-macos-aarch64

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable
        targets: ${{ matrix.target }}

    - name: Install Linux x86_64 dependencies
      if: matrix.os == 'ubuntu-24.04' && matrix.target == 'x86_64-unknown-linux-gnu'
      run: |
        sudo apt update
        sudo apt install -y software-properties-common
        sudo add-apt-repository universe
        sudo apt update
        sudo apt install -y libgtk-3-dev build-essential pkg-config libglib2.0-dev libsoup-3.0-dev libwebkit2gtk-4.1-dev
        echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV

    - name: Install Linux ARM64 dependencies and setup cross-compilation
      if: matrix.os == 'ubuntu-24.04' && matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        sudo apt update
        sudo apt install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
        echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
        # Install ARM64 versions of required libraries
        sudo dpkg --add-architecture arm64
        sudo apt update
        sudo apt install -y libgtk-3-dev:arm64 libglib2.0-dev:arm64 libsoup-3.0-dev:arm64 libwebkit2gtk-4.1-dev:arm64

    - name: Install macOS dependencies
      if: matrix.os == 'macos-latest'
      run: |
        brew install gtk+3
        brew install webkitgtk
        brew install pkg-config

    - name: Install dependencies
      run: cargo fetch --locked

    - name: Build
      run: cargo build --frozen --release --target ${{ matrix.target }}

    - name: Prepare binary
      run: |
        mkdir -p artifacts
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          cp target/${{ matrix.target }}/release/${{ matrix.binary_name }} artifacts/${{ matrix.artifact_name }}
        else
          cp target/${{ matrix.target }}/release/${{ matrix.binary_name }} artifacts/${{ matrix.artifact_name }}
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact_name }}
        path: artifacts/${{ matrix.artifact_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Create artifact directory
      run: mkdir -p artifacts

    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Prepare artifacts for release
      run: |
        cd artifacts
        find . -type f -not -name "*.exe" -exec chmod +x {} \;
        # Move all files to current directory
        find . -mindepth 2 -type f -exec mv {} . \;

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/arnis-windows-x86_64.exe
          artifacts/arnis-linux-x86_64
          artifacts/arnis-linux-aarch64
          artifacts/arnis-macos-x86_64
          artifacts/arnis-macos-aarch64
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
