name: Build and Release Rust Project

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.os == 'windows-latest' && 'x86_64-pc-windows-msvc' || 'x86_64-unknown-linux-gnu' || 'x86_64-apple-darwin' }}

    - name: Install dependencies
      run: cargo fetch

    - name: Build
      run: cargo build --release

    - name: Upload artifact (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: windows-latest-build
        path: target/release/arnis.exe

    - name: Upload artifact (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v3
      with:
        name: ubuntu-latest-build
        path: target/release/arnis

    - name: Upload artifact (MacOS)
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v3
      with:
        name: macos-latest-build
        path: target/release/arnis

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download build artifacts (Ubuntu)
      uses: actions/download-artifact@v3
      with:
        name: ubuntu-latest-build
        path: ./builds/ubuntu

    - name: Download build artifacts (Windows)
      uses: actions/download-artifact@v3
      with:
        name: windows-latest-build
        path: ./builds/windows

    - name: Download build artifacts (MacOS)
      uses: actions/download-artifact@v3
      with:
        name: macos-latest-build
        path: ./builds/macos

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          builds/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
